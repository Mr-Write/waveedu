<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhulang.waveedu.edu.dao.LessonMapper">
    <select id="selectBasicInfo" resultType="com.zhulang.waveedu.edu.query.LessonBasicInfoQuery">
        SELECT l.id,
               l.name,
               l.introduce,
               l.cover,
               l.create_time,
               l.creator_id,
               u.icon AS `creatorIcon`
        FROM `edu_lesson` l,
             `basic_user_info` u
        WHERE l.id = #{lessonId}
          AND l.creator_id = u.id
          AND l.is_deleted = 0
    </select>
    <select id="selectTchInviteCodeById" resultType="com.zhulang.waveedu.edu.query.TchInviteCodeQuery">
        SELECT tch_invite_code, code_is_forbidden
        FROM `edu_lesson`
        WHERE id = #{id}
          AND is_deleted = 0
    </select>
    <select id="selectCreatorIdById" resultType="java.lang.Long">
        SELECT creator_id
        FROM `edu_lesson`
        WHERE `id` = #{id}
          AND is_deleted = 0
    </select>
    <select id="selectCreateLessonSimpleInfoList"
            resultType="com.zhulang.waveedu.edu.query.CreateLessonSimpleInfoQuery">
        SELECT `id`, `name`, `cover`, `create_time`
        FROM `edu_lesson`
        WHERE `creator_id` = #{creatorId}
          AND is_deleted = 0
        ORDER BY `create_time` DESC
    </select>
    <select id="selectNeedCacheInfo" resultType="com.zhulang.waveedu.edu.query.LessonCacheQuery">
        SELECT `id`, `name`, `cover`, `introduce`, `creator_id`, `create_time`
        FROM `edu_lesson`
        WHERE `id` = #{id}
          AND is_deleted = 0
    </select>
    <resultMap id="chapterAndSectionInfoResultMap"
               type="com.zhulang.waveedu.edu.query.ChapterNameInfoWithSectionListQuery">
        <id column="chapter_id" property="chapterId"/>
        <result column="chapter_name" property="chapterName"/>
        <collection property="sectionList" ofType="com.zhulang.waveedu.edu.query.SectionNameInfoQuery">
            <id column="section_id" property="sectionId"/>
            <result column="section_name" property="sectionName"/>
        </collection>
    </resultMap>
    <select id="selectChapterAndSectionInfo" resultMap="chapterAndSectionInfoResultMap">
        SELECT c.id   AS chapter_id,
               c.name AS chapter_name,
               s.id   AS section_id,
               s.name AS section_name
        FROM `edu_lesson_chapter` c
                 LEFT JOIN `edu_lesson_section` s
                           ON c.id = s.chapter_id
        WHERE c.lesson_id = #{lessonId}
        ORDER BY c.order_by, s.order_by
    </select>
</mapper>
